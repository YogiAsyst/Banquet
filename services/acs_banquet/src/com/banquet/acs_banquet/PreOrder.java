/*Copyright (c) 2017-2018 asyst.co.id All Rights Reserved.
 This software is the confidential and proprietary information of asyst.co.id You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with asyst.co.id*/
package com.banquet.acs_banquet;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * PreOrder generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`pre-order`")
public class PreOrder implements Serializable {

    private Integer id;
    private Integer item;
    private Integer quantity;
    private String itemNotes;
    private String session;
    private PackageEntity packageEntity;

    @Id
    @SequenceGenerator(name = "generator", sequenceName = "\"pre-order_ID_seq\"" , schema = "public", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator")
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`item`", nullable = true, scale = 0, precision = 10)
    public Integer getItem() {
        return this.item;
    }

    public void setItem(Integer item) {
        this.item = item;
    }

    @Column(name = "`quantity`", nullable = true, scale = 0, precision = 10)
    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    @Column(name = "`item_notes`", nullable = true, length = 255)
    public String getItemNotes() {
        return this.itemNotes;
    }

    public void setItemNotes(String itemNotes) {
        this.itemNotes = itemNotes;
    }

    @Column(name = "`session`", nullable = true, length = 255)
    public String getSession() {
        return this.session;
    }

    public void setSession(String session) {
        this.session = session;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`item`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_package_TO_pre-order_yXUPi`"))
    public PackageEntity getPackageEntity() {
        return this.packageEntity;
    }

    public void setPackageEntity(PackageEntity packageEntity) {
        if(packageEntity != null) {
            this.item = packageEntity.getId();
        }

        this.packageEntity = packageEntity;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof PreOrder)) return false;
        final PreOrder preOrder = (PreOrder) o;
        return Objects.equals(getId(), preOrder.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

